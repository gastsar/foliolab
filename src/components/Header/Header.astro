---
import Banner from "../Banner.astro";
import { PAGES } from "../../consts";
import ThemeIcon from "../ThemeIcon.astro";
---

<header
  class="sticky bg-secondary font-host top-0 z-50 shadow-sm dark:bg-gray-900 dark:shadow-gray-800"
>
  <div class="mx-auto px-4 py-3 flex items-center justify-between">
    <!-- Logo -->
    <a href="/" class="flex items-center space-x-2">
      <div
        class="w-10 h-10 bg-primary-600 rounded-full flex items-center justify-center text-white font-bold text-xl"
      >
        P
      </div>
      <span class="text-xl font-bold dark:text-white">Portfolio</span>
    </a>

    <!-- Navigation pour mobile (menu hamburger) -->
    <div class="md:hidden">
      <button
        id="mobile-menu-button"
        aria-label="Menu"
        class="text-gray-700 dark:text-gray-300"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="h-6 w-6"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M4 6h16M4 12h16M4 18h16"></path>
        </svg>
      </button>
    </div>

    <!-- Navigation pour desktop -->
    <nav class="hidden md:flex items-center space-x-8">
      <ul class="flex space-x-6">
        {
          PAGES.map((page) => (
            <li>
              <a
                href={page.href}
                class=" font-kanit text-md font-semibold text-gray-900 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400  transition-colors"
              >
                {page.title}
              </a>
            </li>
          ))
        }
      </ul>
    </nav>
    <div class="hidden md:flex items-center space-x-4">
      <!-- CTO -->
      <button
        class="bg-mint-600 text-white px-4 py-2 rounded-full font-semibold hover:bg-mint-900 transition-colors"
      >
        Prenons contact</button
      >

      <!-- Bouton thème clair/sombre -->
      <!--  <ThemeSelector /> -->
      <ThemeIcon />
    </div>
  </div>

  <!-- Menu mobile (caché par défaut) -->
  <div
    id="mobile-menu"
    class="hidden md:hidden z-30 absolute left-0 w-full bg-white dark:bg-gray-900 shadow-md dark:shadow-gray-800 animate-fade-in"
  >
    <nav class="container mx-auto px-4 py-3">
      <ul class="space-y-3">
        {
          PAGES.map((link) => (
            <li>
              <a
                href={link.href}
                class="block text-gray-700 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 transition-colors py-2"
              >
                {link.title}
              </a>
            </li>
          ))
        }
      </ul>

      <div
        class="flex items-center justify-end mt-4 pt-4 border-t border-gray-200 dark:border-gray-700"
      >
        <!-- Bouton thème clair/sombre (mobile) -->
        <ThemeIcon />
      </div>
    </nav>
  </div>
</header>

<script>
  // Script pour le menu mobile
  const mobileMenuButton = document.getElementById("mobile-menu-button");
  const mobileMenu = document.getElementById("mobile-menu");
  const themeToggleMobile = document.getElementById("theme-toggle-mobile");
  const languageSelectorMobile = document.getElementById(
    "language-selector-mobile"
  );

  if (mobileMenuButton && mobileMenu) {
    mobileMenuButton.addEventListener("click", () => {
      mobileMenu.classList.toggle("hidden");
    });
  }
  /* 
  // Synchroniser le thème pour le bouton mobile
  if (themeToggleMobile) {
    themeToggleMobile.addEventListener("click", () => {
      if (document.documentElement.classList.contains("dark")) {
        document.documentElement.classList.remove("dark");
        localStorage.setItem("theme", "light");
      } else {
        document.documentElement.classList.add("dark");
        localStorage.setItem("theme", "dark");
      }
    });
  }

  // Synchroniser le sélecteur de langue mobile
  if (languageSelectorMobile) {
    languageSelectorMobile.addEventListener("change", (e) => {
      const target = e.target as HTMLSelectElement;
      localStorage.setItem("language", target.value);
      // Dans une application réelle, vous redirigeriez vers la version localisée
    });
  } */
</script>
