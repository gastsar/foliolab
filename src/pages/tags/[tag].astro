---
import Breadcrumb from "@/components/Breadcrumb.astro";
import { getCollection } from "astro:content";
import BlogPost from "../../components/blog/BlogPost.astro";
import Layout from "../../layouts/Layout.astro";
export const prerender = true;
export async function getStaticPaths() {
  const allPosts = await getCollection("blog");
  const uniqueTags = [
    ...new Set(allPosts.map((post) => post.data.tags).flat()),
  ];

  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) =>
      post.data.tags.includes(tag)
    );
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}
const { tag } = Astro.params;
const { posts } = Astro.props;
---

<Layout title={`Articles et projets Ã©tiquetÃ©s : ${tag}`}>
  <Breadcrumb pageTitle="tags" title=` ${tag}` />

  <div class="container mx-auto px-2 py-4">
    <!-- Titre et tag -->
    <div class="text-center mb-4">
      <h1 class="text-4xl font-bold text-gray-900">
        Articles et projets Ã©tiquetÃ©s :
      </h1>
      <span
        class="inline-block mt-3 px-4 py-2 bg-mint-500 text-white text-sm font-semibold rounded-full shadow-md"
      >
        #{tag}
      </span>
    </div>

    <!-- Liste des articles -->
    <section class="max-w-6xl mx-auto p-6">
      <h2 class="text-2xl font-semibold text-gray-800 mb-4">ðŸ“š Articles</h2>
      <ul class="grid grid-cols-1 gap-6">
        {
          posts.map((post: any) => (
            <BlogPost
              url={`/posts/${post.id}`}
              title={post.data.title}
              date={post.data.pubDate}
              image={post.data.image.url}
              author={post.data.author}
              readTime={post.data.readTime}
              description={post.data.description}
            />
          ))
        }
      </ul>
    </section>
  </div>
</Layout>
