---
import Banner from "../components/Banner.astro";
import CookieConsent from "../components/cookie/CookieConsent.astro";
import Footer from "../components/Footer/Footer.astro";
import Header from "../components/Header/Header.astro";
import "../styles/global.css";
import "../styles/markdown.css";
interface Props {
  title: string;
  description?: string;
}

const { title, description = "Portfolio professionnel" } = Astro.props;
---

<!doctype html>
<html lang="fr">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content={description} />
    <title>{title}</title>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap"
      rel="stylesheet"
    />
    <link
      href="https://fonts.googleapis.com/css2?family=Dela+Gothic+One&family=Host+Grotesk:wght@300;400;500;700&family=Kanit:wght@300;400;500;700&family=Passion+One:wght@400;700&display=swap"
      rel="stylesheet"
    />

    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css"
    />
  </head>
  <body
    class="min-h-screen font-host flex flex-col bg-secondary text-gray-800 transition-colors duration-300"
  >
    <Header />
    <Banner />
    <main class="px-4 py-12 flex-grow">
      <slot />
    </main>
    <Footer />
    <CookieConsent />
    <script>
      // Script pour gérer le thème clair/sombre
      const themeToggle = document.getElementById("theme-toggle");

      // Vérifier si le thème est déjà défini dans le localStorage
      if (
        localStorage.getItem("theme") === "dark" ||
        (!localStorage.getItem("theme") &&
          window.matchMedia("(prefers-color-scheme: dark)").matches)
      ) {
        document.documentElement.classList.add("dark");
      } else {
        document.documentElement.classList.remove("dark");
      }

      // Ajouter un écouteur d'événement pour le bouton de basculement de thème
      if (themeToggle) {
        themeToggle.addEventListener("click", () => {
          if (document.documentElement.classList.contains("dark")) {
            document.documentElement.classList.remove("dark");
            localStorage.setItem("theme", "light");
          } else {
            document.documentElement.classList.add("dark");
            localStorage.setItem("theme", "dark");
          }
        });
      }
    </script>
  </body>
</html>

<style is:global>
  html {
    font-family: "Inter", system-ui, sans-serif;
    scroll-behavior: smooth;
  }

  body {
    min-height: 100vh;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  .animate-fade-in {
    animation: fadeIn 0.5s ease-in-out forwards;
  }
</style>
